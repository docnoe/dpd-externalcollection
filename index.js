// Generated by CoffeeScript 1.9.0
var Collection, Connector, EventEmitter, ExternalCollection, debug, externalDbs, util, _;

util = require("util");

Collection = require(require.main.paths[0] + "/deployd/lib/resources/collection");

EventEmitter = require("events").EventEmitter;

_ = require("underscore");

debug = require("debug")("dpd-external-collection");

Connector = require("./lib/connector");

externalDbs = {};

ExternalCollection = (function() {
  ExternalCollection.prototype.clientGeneration = true;

  ExternalCollection.dashboard = JSON.parse(JSON.stringify(Collection.dashboard));

  ExternalCollection.dashboard.pages.push("config");

  ExternalCollection.events = _.clone(Collection.events);

  ExternalCollection.label = "External Collection";

  ExternalCollection.defaultPath = "/external";

  ExternalCollection.basicDashboard = {
    settings: [
      {
        name: 'host',
        type: 'text'
      }, {
        name: 'port',
        type: 'number'
      }, {
        name: 'name',
        type: 'text'
      }
    ]
  };

  function ExternalCollection(name, options) {
    var config, dbConfigAsString;
    if (options) {
      config = options.config;
    }
    if (config && config.host && config.port && config.name) {
      dbConfigAsString = "" + config.host + config.port + config.name;
      if (!externalDbs[dbConfigAsString]) {
        debug("creating new store");
        externalDbs[dbConfigAsString] = {};
        externalDbs[dbConfigAsString].db = new Connector(config).db;
      }
    }
    options.db = externalDbs[dbConfigAsString] && externalDbs[dbConfigAsString].db || options.db;
    Collection.apply(this, [name, options]);
    if (!this.properties) {
      this.properties = {};
    }
    return;
  }

  return ExternalCollection;

})();

util.inherits(ExternalCollection, Collection);

module.exports = ExternalCollection;
